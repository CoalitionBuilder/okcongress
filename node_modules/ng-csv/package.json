{
  "name": "ng-csv",
  "version": "0.3.3",
  "main": "build/ng-csv.min.js",
  "description": "Simple directive that turns arrays and objects into downloadable CSV files",
  "repository": {
    "type": "git",
    "url": "git@github.com:asafdav/ng-csv.git"
  },
  "keywords": [
    "angular",
    "angularjs",
    "csv"
  ],
  "homepage": "https://github.com/asafdav/ng-csv",
  "author": {
    "name": "Asaf David",
    "email": "asafdav@gmail.com",
    "url": "http://about.me/asafdavid"
  },
  "dependencies": {},
  "devDependencies": {
    "connect-livereload": "^0.2.0",
    "grunt": "~0.4.1",
    "grunt-build-control": "^0.1.3",
    "grunt-concurrent": "^0.3.1",
    "grunt-contrib-clean": "^0.6.0",
    "grunt-contrib-coffee": "^0.7.0",
    "grunt-contrib-compass": "^0.3.0",
    "grunt-contrib-concat": "^0.3.0",
    "grunt-contrib-connect": "^0.3.0",
    "grunt-contrib-copy": "^0.7.0",
    "grunt-contrib-cssmin": "^0.6.2",
    "grunt-contrib-htmlmin": "^0.1.3",
    "grunt-contrib-imagemin": "^0.1.4",
    "grunt-contrib-jshint": "^0.6.5",
    "grunt-contrib-uglify": "^0.2.7",
    "grunt-contrib-watch": "^0.4.4",
    "grunt-google-cdn": "^0.2.2",
    "grunt-karma": "^0.8.3",
    "grunt-ngmin": "~0.0.2",
    "grunt-open": "~0.2.0",
    "grunt-rev": "~0.1.0",
    "grunt-svgmin": "^0.2.1",
    "grunt-usemin": "^0.1.13",
    "karma": "^0.12.16",
    "karma-chrome-launcher": "^0.1.3",
    "karma-jasmine": "^0.2.2",
    "karma-phantomjs-launcher": "^0.1.4",
    "matchdep": "^0.1.2"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "scripts": {
    "test": "grunt test --verbose"
  },
  "autoupdate": {
    "source": "git",
    "target": "https://github.com/asafdav/ng-csv.git",
    "basePath": "",
    "files": [
      "build/ng-csv.min.js",
      "build/ng-csv.js"
    ]
  },
  "readme": "ngCsv - Export to CSV using AngularJS\n======\n\nAn AngularJS simple directive that turns arrays and objects into downloadable CSV files,\n\n[![Build Status](https://travis-ci.org/asafdav/ng-csv.svg?branch=master)](https://travis-ci.org/asafdav/ng-csv)\n\n## Dependencies\n* angular.js (of course!), any version starting with 1\n* angular-sanitize.js, any version starting with 1\n\n\n## How to get it ?\n\n#### Manual Download\nDownload the from [here](https://github.com/asafdav/ng-csv/releases)\n\n#### Bower\n```\nbower install ng-csv\n```\n\n#### Npm\n```\nnpm install ng-csv\n```\n\n#### CDN\nng-csv is available at [cdnjs](http://www.cdnjs.com/libraries/ng-csv)\n\n\n## Usage\n1. Add ng-csv.min.js to your main file (index.html).\nplease also make sure you're adding angular-sanitize.min.js.\n\n2. Set `ngCsv` as a dependency in your module\n  ```javascript\n  var myapp = angular.module('myapp', ['ngSanitize', 'ngCsv'])\n  ```\n\n3. Add ng-csv directive to the wanted element, example:\n  ```html\n  <button type=\"button\" ng-csv=\"getArray()\" filename=\"test.csv\">Export</button>\n  ```\n\nngCsv attributes\n----------------\n* ng-csv: The data array - Could be an expression, a value or a promise.\n* filename: The filename that will be stored on the user's computer\n* csv-header: If provided, would use this attribute to create a header row\n\n    ```html\n  <button type=\"button\" ng-csv=\"getArray()\" csv-header=\"['Field A', 'Field B', 'Field C']\" filename=\"test.csv\">Export</button>\n  ```\n\n* field-separator: Defines the field separator character (default is ,)\n* decimal-separator: Defines the decimal separator character (default is .). If set to \"locale\", it uses the [language sensitive representation of the number](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString).\n* text-delimiter: If provided, will use this characters to \"escape\" fields, otherwise will use double quotes as deafult\n* quote-strings: If provided, will force escaping of every string field.\n* lazy-load: If defined and set to true, ngCsv will generate the data string only on demand. See the lazy_load example for more details.\n* add-bom: Add the Byte Order Mark, use this option if you are getting an unexpected char when opening the file on any windows App.\n* charset: Defines the charset of the downloadable Csv file. Default is \"utf-8\".\n\n## Examples\nYou can check out this live example here: https://asafdav.github.io/ng-csv/example/\n\nFor lazy load example using promises see this example: https://asafdav.github.io/ng-csv/example/lazy_load.html\n\nSupported Browsers\n------------------\n| Browser         | Filenames     |\n| --------------- | ------------- |\n| Firefox 20+     | Yes           |\n| Chrome 14+      | Yes           |\n| Safari          | No            |\n| IE 10+          | Yes           |\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/asafdav/ng-csv/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/asafdav/ng-csv/issues"
  },
  "_id": "ng-csv@0.3.3",
  "_shasum": "56e476ffe4484c6f82f6f81571a48b5558469496",
  "_from": "ng-csv@",
  "_resolved": "https://registry.npmjs.org/ng-csv/-/ng-csv-0.3.3.tgz"
}
